name: Build and Deploy API Server

on:
  # Triggers the workflow on push events but only for the main branch and release tag
  push:
    branches: [main]
    tags:
      # Regex for a version number such as 0.2.1
      - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - main

env:
  BINARY_NAME: ntex-restful-api-server

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build binary
        run: cargo build --verbose --release

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: api-server-binary
          path: target/release/${{ env.BINARY_NAME }}

  deploy:
    needs: build
    name: Deploy API Server
    runs-on: ubuntu-latest
    steps:
      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          name: api-server-binary
          path: distfiles

      - name: Stop API server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            # 函数用于捕获并忽略 INT 信号
            # trap '' INT

            if pgrep -f ${{ env.BINARY_NAME }} > /dev/null; then
                # 优雅关闭进程
                kill -INT $(pgrep -f ${{ env.BINARY_NAME }}) > /dev/null
                echo "${{ env.BINARY_NAME }} process terminated"

                # 等待 2 秒
                sleep 2
            else
                echo "${{ env.BINARY_NAME }} process not found"
            fi

      - name: copy file via ssh key
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          rm: true
          source: 'distfiles/${{ env.BINARY_NAME }}'
          target: '/root/PWR/api-server'
          strip_components: 1

      - name: Start API server
        uses: appleboy/ssh-action@master
        env:
          BINARY_NAME: ${{ env.BINARY_NAME }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          ACCESS_TOKEN_MAXAGE: ${{ secrets.ACCESS_TOKEN_MAXAGE }}
          REFRESH_TOKEN_MAXAGE: ${{ secrets.REFRESH_TOKEN_MAXAGE }}
          ACCESS_TOKEN_PRIVATE_KEY: ${{ secrets.ACCESS_TOKEN_PRIVATE_KEY}}
          REFRESH_TOKEN_PRIVATE_KEY: ${{ secrets.REFRESH_TOKEN_PRIVATE_KEY }}
          ACCESS_TOKEN_PUBLIC_KEY: ${{ secrets.ACCESS_TOKEN_PUBLIC_KEY }}
          REFRESH_TOKEN_PUBLIC_KEY: ${{ secrets.REFRESH_TOKEN_PUBLIC_KEY }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          envs: BINARY_NAME,SERVER_PORT,DATABASE_URL,REDIS_URL,ACCESS_TOKEN_MAXAGE,REFRESH_TOKEN_MAXAGE,ACCESS_TOKEN_PRIVATE_KEY,REFRESH_TOKEN_PRIVATE_KEY,ACCESS_TOKEN_PUBLIC_KEY,REFRESH_TOKEN_PUBLIC_KEY
          script: |
            cd /root/PWR/api-server
            chmod +x $BINARY_NAME
            SERVER_PORT=$SERVER_PORT DATABASE_URL=$DATABASE_URL REDIS_URL=$REDIS_URL ACCESS_TOKEN_MAXAGE=$ACCESS_TOKEN_MAXAGE REFRESH_TOKEN_MAXAGE=$REFRESH_TOKEN_MAXAGE ACCESS_TOKEN_PRIVATE_KEY=$ACCESS_TOKEN_PRIVATE_KEY REFRESH_TOKEN_PRIVATE_KEY=$REFRESH_TOKEN_PRIVATE_KEY ACCESS_TOKEN_PUBLIC_KEY=$ACCESS_TOKEN_PUBLIC_KEY  REFRESH_TOKEN_PUBLIC_KEY=$REFRESH_TOKEN_PUBLIC_KEY nohup ./$BINARY_NAME > output.log 2>&1 &
